import Image from "next/image";
import React from "react";
import styles from "./benefits.module.css";

const FastIcon = () => (
	<svg
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M15.0275 2.67642C15.2098 2.82526 15.2637 3.08107 15.1568 3.29075L11.668 10.1368L19.2288 10.6628C19.4179 10.6759 19.5832 10.7948 19.6559 10.9698C19.7286 11.1448 19.6961 11.3458 19.572 11.489C18.6329 12.5725 16.4064 15.0764 15.0569 16.3672C14.3561 17.0375 12.831 18.1335 11.2492 19.2101C9.65312 20.2963 7.95609 21.3914 6.87975 22.0686C6.69858 22.1826 6.46494 22.1687 6.29865 22.0339C6.13236 21.8991 6.0703 21.6734 6.14429 21.4726C6.33965 20.9423 7.0352 19.6365 8.34889 18.2631C9.37259 17.1929 10.8165 15.0429 11.7176 13.6137H4.80588C4.62574 13.6137 4.45953 13.5168 4.37078 13.3601C4.28202 13.2033 4.28445 13.011 4.37713 12.8565C4.74541 12.2427 5.38243 11.2507 6.104 10.2568C6.81999 9.27068 7.6424 8.25019 8.38096 7.60394C9.77949 6.3802 12.9799 3.80366 14.3998 2.67264C14.5838 2.52601 14.8453 2.52758 15.0275 2.67642ZM13.2093 4.90983C11.7289 6.10486 9.97155 7.54093 9.03947 8.35651C8.38982 8.92496 7.62157 9.86871 6.91321 10.8444C6.46053 11.4678 6.04177 12.0911 5.70624 12.6137H12.6146C12.795 12.6137 12.9614 12.7109 13.05 12.868C13.1387 13.0251 13.1358 13.2178 13.0426 13.3722C12.274 14.6451 10.3875 17.5785 9.07154 18.9543C8.69126 19.3519 8.36973 19.7403 8.10273 20.0986C8.91533 19.5708 9.81641 18.9755 10.6865 18.3834C12.2848 17.2957 13.7362 16.2467 14.3657 15.6445C15.4263 14.63 17.0673 12.8199 18.1538 11.5904L10.8446 11.0819C10.6772 11.0703 10.5268 10.9755 10.4442 10.8294C10.3615 10.6834 10.3576 10.5056 10.4338 10.3561L13.2093 4.90983Z"
			fill="#c1db3d"
		/>
	</svg>
);

const LightBulbIcon = () => (
	<svg
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M9.8969 3.22084C10.4677 3.04208 11.0561 2.9695 11.7812 2.97178C13.3499 2.97669 14.263 3.46124 15.4965 4.26861C17.1649 5.36065 18.3654 6.60455 19.0162 8.55695C19.0209 8.57087 19.0249 8.58499 19.0283 8.59926C19.2951 9.71991 19.123 11.2315 18.6315 12.6015C18.1404 13.97 17.2899 15.3102 16.0911 16.0037C15.8956 16.1168 15.7707 16.2739 15.6839 16.4814C15.6145 16.647 15.55 16.9336 15.5012 17.2766C15.454 17.6087 15.4268 17.9534 15.4176 18.2102C15.4129 18.3416 15.4083 18.4753 15.4036 18.6095C15.3768 19.3807 15.3494 20.1714 15.3084 20.6509C15.2896 20.8721 15.1271 21.0543 14.9095 21.0984C14.8235 21.1158 14.7045 21.1565 14.522 21.2256C14.4894 21.2379 14.4552 21.251 14.4195 21.2646C14.2687 21.3223 14.0914 21.39 13.9012 21.4537C13.4237 21.6133 12.8253 21.7614 12.1263 21.7342C11.0646 21.6928 9.83808 21.362 9.18207 21.1851C9.03656 21.1458 8.91913 21.1142 8.83778 21.0949C8.59652 21.0378 8.43357 20.8124 8.45486 20.5654C8.49652 20.0822 8.48361 19.6185 8.46924 19.1021C8.46135 18.8187 8.45302 18.5194 8.45302 18.1923C8.45302 17.4558 8.17205 16.753 8.00393 16.3464C7.92576 16.1573 7.84667 15.996 7.77385 15.8747C7.70213 15.7551 7.65766 15.7103 7.65068 15.7033C7.65025 15.7028 7.64996 15.7025 7.64982 15.7024C6.33823 14.787 5.50445 13.3502 5.04477 11.8179C4.738 10.7954 4.81842 9.29887 5.07375 8.32397C5.32692 7.35729 5.83401 6.20751 6.58123 5.43155C7.03406 4.96131 7.50884 4.46993 8.20418 4.04255C8.80563 3.67287 9.33014 3.39833 9.8969 3.22084ZM10.1957 4.17514C9.74355 4.31675 9.3001 4.54274 8.72782 4.89449C8.15275 5.24795 7.75597 5.6533 7.30155 6.12519C6.71538 6.73391 6.26965 7.70476 6.04112 8.57733C5.81749 9.4312 5.76322 10.7327 6.00259 11.5306C6.42117 12.9258 7.15421 14.1394 8.2276 14.8861L8.23432 14.8908C8.4022 15.0117 8.53355 15.1972 8.63137 15.3602C8.69902 15.473 8.76449 15.5991 8.8266 15.7326C9.24372 15.8327 10.1973 16.0175 11.7811 16.0538C11.7174 15.4026 11.6457 14.4731 11.6457 13.7121V12.008L9.33569 9.81402C9.13546 9.62386 9.12729 9.30739 9.31744 9.10715C9.5076 8.90691 9.82408 8.89874 10.0243 9.0889L12.1239 11.0828L13.698 9.39242C13.8862 9.19033 14.2026 9.17906 14.4047 9.36724C14.6068 9.55543 14.618 9.87181 14.4298 10.0739L12.6457 11.9898V13.7121C12.6457 14.4696 12.7224 15.4232 12.7862 16.0552C13.67 16.0354 14.2299 15.9592 14.569 15.8954C14.711 15.8687 14.8148 15.8443 14.8971 15.8242C15.0557 15.5566 15.279 15.3182 15.5904 15.1381C16.5023 14.6105 17.2397 13.5195 17.6902 12.2638C18.1366 11.0195 18.2613 9.7245 18.0604 8.8518C17.4999 7.18716 16.4851 6.11091 14.9488 5.10531C13.7774 4.33859 13.0611 3.97579 11.7781 3.97177C11.1254 3.96972 10.6439 4.03481 10.1957 4.17514ZM14.5457 16.9144C14.0761 16.9894 13.3742 17.0601 12.3385 17.0601C10.9192 17.0601 9.90225 16.9464 9.24284 16.8355C9.32732 17.1253 9.40107 17.4555 9.43429 17.8056C9.64502 17.8494 9.92033 17.8888 10.2569 17.92C10.7859 17.969 11.4311 17.9946 12.1457 17.9946C13.1719 17.9946 13.9797 17.874 14.4407 17.7845C14.4567 17.5788 14.4799 17.3555 14.5112 17.1357C14.5215 17.0629 14.533 16.9888 14.5457 16.9144ZM14.396 18.8091C13.8723 18.8989 13.0939 18.9946 12.1457 18.9946C11.4098 18.9946 10.7325 18.9683 10.1647 18.9157C9.91459 18.8926 9.67816 18.8637 9.46304 18.8279C9.46448 18.8839 9.46598 18.9401 9.46749 18.9964C9.47849 19.4071 9.48961 19.822 9.47592 20.2274C9.48564 20.23 9.49544 20.2327 9.50532 20.2353C10.1818 20.4165 11.2355 20.6987 12.1652 20.7349C12.6986 20.7557 13.1691 20.644 13.584 20.5053C13.7522 20.449 13.905 20.3907 14.0545 20.3336C14.0925 20.3191 14.1302 20.3046 14.168 20.2903C14.2225 20.2697 14.2787 20.2486 14.3358 20.2283C14.3589 19.8378 14.3776 19.3341 14.396 18.8091Z"
			fill="#c1db3d"
		/>
	</svg>
);

const SettingIcon = () => (
	<svg
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			fillRule="evenodd"
			clipRule="evenodd"
			d="M9.91333 2.87602C9.94713 2.61244 10.1812 2.42134 10.4462 2.44097L13.6353 2.67721C13.8764 2.69507 14.0702 2.8829 14.0956 3.12333L14.3557 5.58648C14.5236 5.64598 14.6996 5.71969 14.8587 5.79072C15.1548 5.92296 15.449 6.07193 15.6315 6.17625C15.8597 6.30661 16.1173 6.53747 16.3296 6.75787C16.441 6.87349 16.5528 6.99965 16.653 7.12572C17.1766 6.93955 17.8747 6.686 18.1095 6.58267C18.3865 6.46081 19.0043 6.08803 19.2967 5.90391C19.4186 5.82719 19.5676 5.80672 19.7056 5.84775C19.8436 5.88879 19.9573 5.98733 20.0174 6.11816L21.2855 8.87628C21.3859 9.09462 21.3168 9.35349 21.1209 9.4927L18.8908 11.0776C18.9189 11.1954 18.9439 11.3182 18.9652 11.4348C19.0139 11.7007 19.0521 11.9811 19.0665 12.1822C19.1105 12.7976 19.016 13.2536 18.9064 13.6103C19.3699 13.9258 20.0033 14.3509 20.2619 14.5041C20.5911 14.6992 20.9897 14.9041 21.2633 15.0126C21.5108 15.1107 21.6379 15.3856 21.5526 15.6377C21.436 15.982 21.2843 16.3932 21.1429 16.7486C21.0095 17.0839 20.8641 17.4243 20.7616 17.5863C20.6502 17.7623 20.55 17.9501 20.4456 18.1459C20.4058 18.2205 20.3654 18.2963 20.3234 18.373C20.2517 18.5045 20.1749 18.6394 20.095 18.758C20.019 18.8708 19.9184 19.0026 19.7903 19.102C19.6377 19.2203 19.4306 19.2402 19.2583 19.1531L16.6945 17.8573C16.6177 17.9372 16.5365 18.0152 16.4562 18.0876C16.2613 18.2636 16.0342 18.4405 15.8345 18.5514C15.6615 18.6475 15.3718 18.7869 15.082 18.9101C14.9251 18.9767 14.7509 19.0462 14.5856 19.1019L14.1539 21.8472C14.1332 21.9785 14.0611 22.0962 13.9535 22.1743C13.846 22.2523 13.7117 22.2843 13.5805 22.2632C13.2117 22.2039 12.3227 22.1714 12.0088 22.1714C11.8395 22.1714 11.5476 22.148 11.269 22.1257C11.2442 22.1237 11.2196 22.1217 11.1951 22.1197C10.8737 22.0941 10.5705 22.0712 10.3872 22.0712C10.1365 22.0712 9.9245 21.8855 9.89158 21.6369L9.52881 18.8973C9.43157 18.8775 9.32826 18.8544 9.22493 18.8282C8.98403 18.7672 8.6762 18.6738 8.46014 18.5355C8.21973 18.3816 7.74598 18.0188 7.40773 17.754L4.87215 19.0154C4.74761 19.0773 4.60289 19.0846 4.47277 19.0355C4.34264 18.9863 4.23888 18.8852 4.1864 18.7564C4.11138 18.5722 3.98256 18.2718 3.84287 17.9763C3.69833 17.6706 3.55884 17.4061 3.46249 17.2703C3.21119 16.9162 2.72221 16.2121 2.50993 15.9055C2.42684 15.7855 2.40035 15.6351 2.4374 15.494C2.47446 15.3528 2.57136 15.2348 2.70267 15.1711C2.93848 15.0566 3.31116 14.8661 3.65697 14.6697C3.83001 14.5714 3.99148 14.4744 4.12372 14.3868C4.26409 14.2937 4.34351 14.2294 4.37404 14.1976C4.58829 13.9748 4.9044 13.7342 5.16261 13.5537C5.04886 13.202 4.93375 12.7225 4.94294 12.2811C4.95105 11.8919 5.01857 11.5087 5.08795 11.2205L2.80429 9.73553C2.5797 9.58948 2.51013 9.29237 2.64652 9.06179C2.84471 8.72677 3.26919 7.96164 3.44501 7.49623C3.65412 6.94272 4.09006 6.16008 4.27566 5.84598C4.41588 5.60869 4.72167 5.52962 4.95934 5.6692L7.31087 7.05026C7.61546 6.76798 8.04676 6.39639 8.39995 6.18262C8.75184 5.96963 9.22695 5.75578 9.56196 5.61675L9.91333 2.87602ZM10.8449 3.47325L10.5165 6.03553C10.493 6.21862 10.3705 6.37388 10.198 6.4394C9.93067 6.54088 9.30854 6.80159 8.91775 7.03812C8.54347 7.26466 7.98153 7.78228 7.73733 8.02649C7.57633 8.18748 7.3269 8.21938 7.13057 8.10408L4.89144 6.78904C4.70818 7.12606 4.49649 7.54256 4.38048 7.84963C4.23402 8.23732 3.96264 8.76006 3.74473 9.15424L5.94209 10.5831C6.13506 10.7086 6.21743 10.9496 6.14161 11.167C6.08293 11.3352 5.95268 11.8241 5.94273 12.3019C5.93362 12.7388 6.12429 13.3155 6.22696 13.5508C6.32607 13.778 6.24384 14.0434 6.03369 14.1748C5.81089 14.314 5.33232 14.6438 5.09488 14.8907C4.98374 15.0063 4.82644 15.1207 4.67623 15.2203C4.51789 15.3252 4.33491 15.4347 4.15082 15.5393C3.98676 15.6324 3.81797 15.7239 3.65906 15.8074C3.87519 16.1181 4.12323 16.4735 4.27799 16.6916C4.43099 16.9072 4.60318 17.2448 4.74695 17.549C4.8005 17.6623 4.85242 17.7759 4.90072 17.8843L7.24606 16.7175C7.42004 16.6309 7.62841 16.653 7.78037 16.7741C8.08959 17.0205 8.74244 17.5289 8.99919 17.6932C9.06648 17.7363 9.23326 17.7987 9.47051 17.8588C9.68999 17.9144 9.91321 17.9544 10.0471 17.9736C10.269 18.0053 10.4426 18.1807 10.4721 18.4029L10.8278 21.0895C10.9751 21.0991 11.1297 21.1113 11.2747 21.1229L11.3182 21.1264C11.6267 21.1511 11.8818 21.1714 12.0088 21.1714C12.2356 21.1714 12.7801 21.1872 13.2399 21.2222L13.6477 18.6292C13.6807 18.4191 13.843 18.253 14.0522 18.2149C14.1706 18.1934 14.4102 18.109 14.691 17.9897C14.96 17.8754 15.2159 17.7512 15.3489 17.6773C15.4552 17.6182 15.6186 17.4965 15.7863 17.3452C15.9546 17.1933 16.0893 17.0458 16.1546 16.9504C16.2961 16.7435 16.569 16.6734 16.7928 16.7865L19.3431 18.0755C19.375 18.0217 19.409 17.9611 19.4458 17.8938C19.4775 17.8357 19.5115 17.7718 19.5475 17.7045C19.6568 17.4994 19.7836 17.2616 19.9167 17.0514C19.9593 16.9841 20.0703 16.7393 20.2137 16.3789C20.2936 16.1781 20.3771 15.9582 20.4549 15.7446C20.2165 15.6276 19.9674 15.492 19.7521 15.3644C19.3917 15.1509 18.4445 14.5074 18.0276 14.2208C17.8408 14.0924 17.7638 13.8545 17.8399 13.641L17.8487 13.6163L17.8487 13.6163C17.9784 13.2524 18.1132 12.8723 18.069 12.2535C18.0581 12.0995 18.0259 11.8571 17.9816 11.615C17.9357 11.3643 17.8846 11.1587 17.8455 11.0592C17.7615 10.8454 17.834 10.6018 18.0212 10.4688L20.2039 8.91759L19.3437 7.04667C19.0541 7.21847 18.7253 7.40424 18.5122 7.49799C18.1729 7.64732 17.1025 8.02888 16.6279 8.19511C16.4018 8.27427 16.1514 8.18202 16.0307 7.97515C15.9557 7.84662 15.7989 7.64829 15.6095 7.45169C15.4166 7.25151 15.238 7.10312 15.1354 7.0445C14.9872 6.95984 14.7235 6.82555 14.4509 6.70381C14.1657 6.57645 13.9233 6.48682 13.7992 6.46295C13.583 6.42139 13.4195 6.24336 13.3964 6.02446L13.145 3.64363L10.8449 3.47325ZM11.0883 9.31909C11.3568 9.23501 11.6277 9.20328 11.944 9.20427C12.6665 9.20654 13.0961 9.43966 13.616 9.77996C14.3316 10.2483 14.8742 10.8023 15.166 11.6779C15.3607 12.2619 15.2093 12.8609 15.1032 13.2805C15.0923 13.3237 15.0818 13.365 15.0723 13.4042C14.8615 14.271 14.2396 15.0731 13.3166 15.35C12.8085 15.5025 12.2206 15.5398 11.6634 15.4731C11.1086 15.4068 10.5424 15.2323 10.0967 14.9222C9.49007 14.5002 9.11975 13.8482 8.92012 13.1827C8.7754 12.7003 8.81586 12.0341 8.92907 11.6018C9.03931 11.1809 9.26368 10.6603 9.61525 10.2952L9.61853 10.2918C9.80145 10.1018 10.0169 9.87806 10.3334 9.68353C10.5866 9.52792 10.8239 9.40189 11.0883 9.31909ZM11.3872 10.2734C11.2373 10.3203 11.0811 10.3978 10.8571 10.5355C10.659 10.6572 10.5208 10.7965 10.3356 10.9889C10.145 11.1867 9.98204 11.5283 9.89644 11.8551C9.81493 12.1664 9.80063 12.6376 9.87795 12.8954C10.0357 13.4212 10.3032 13.8477 10.6678 14.1013C10.9419 14.292 11.338 14.4271 11.7821 14.4802C12.2237 14.533 12.6713 14.4996 13.0293 14.3922C13.5489 14.2363 13.9568 13.7593 14.1006 13.1679C14.1068 13.1425 14.1129 13.1177 14.1188 13.0932C14.2387 12.602 14.3153 12.2881 14.2173 11.9941C14.0173 11.3941 13.6584 11.0029 13.0684 10.6167C12.6106 10.317 12.3777 10.2056 11.9409 10.2043C11.697 10.2035 11.5329 10.2277 11.3872 10.2734Z"
			fill="#c1db3d"
		/>
	</svg>
);

const benefitsData = [
	{
		id: 1,
		Icon: FastIcon,
		headline: "Instant Inspiration",
		text: "Feed our AI your ideas, and watch as it spits out lyrics tailored to your style and message.",
		imageUrl: "/landing/6.jpg",
	},
	{
		id: 2,
		Icon: LightBulbIcon,
		headline: "High Quality",
		text: "Our algorithm is trained on the greatest MCs of all time, ensuring your high quality and authentic lyrics.",
		imageUrl: "/landing/3.jpg",
	},
	{
		id: 3,
		Icon: SettingIcon,
		headline: "Customizable",
		text: "Adjust syllable count and rhyme schemes to match your unique voice.",
		imageUrl: "/landing/7.jpg",
	},
];

const Benefits = () => {
	return (
		<section className={styles.section}>
			<article className="prose lg:prose-xl w-full mt-12 max-w-none">
				<h2>
					Here&apos;s what makes our generator the hottest thing in
					hip-hop:
				</h2>
			</article>
			{/* <article className="prose lg:prose-xl w-full mx-auto"> */}
			<div className="border-red-400 w-full mt-8">
				{benefitsData.map((b) => (
					<div className={styles.gridWrapper} key={b.id}>
						<div className="card lg:card-side bg-base-100 shadow-xl mx-auto mb-8">
							{/* <figure className={styles.imgContainer}> */}
							<figure className="z-10">
								<Image
									src={b.imageUrl}
									alt=""
									width={0}
									height={0}
									sizes="100vw"
									style={{ width: "300px", height: "auto" }} // optional
								/>
							</figure>
							<div className="card-body rounded-2xl lg:-ml-4 z-0 bg-slate-800">
								<div className="my-auto ml-">
									<div className="flex flex-row items-center gap-2">
										<b.Icon />
										<article className="prose lg:prose-xl">
											<h3>{b.headline}</h3>
										</article>
									</div>
									<p>{b.text}</p>
								</div>
							</div>
						</div>
					</div>
				))}
			</div>
			{/* </article> */}
		</section>
	);
};

export default Benefits;

{
	/* <div className="grid grid-cols-2 grid-rows-1 gap-4 mx-auto">
							<div className={styles.imgContainer}>
								<Image
									src={b.imageUrl}
									fill={true}
									alt=""
									className={styles.img}
								/>
							</div>
							<div className="col-span-1">
								<div className="flex flex-row items-center">
									<b.Icon />
									<p>{b.headline}</p>
								</div>
								<p>{b.text}</p>
							</div>
						</div> */
}
